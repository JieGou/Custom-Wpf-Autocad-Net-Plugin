<UserControl x:Class="Intellidesk.AcadNet.Views.SearchTextView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Background="#FFF0F0F0"
             xmlns:infrahelpers="clr-namespace:ID.Infrastructure.Helpers;assembly=ID.Infrastructure"
             DataContext = "{Binding RelativeSource={RelativeSource Self}, Path=SearchDataContext}"
             MinWidth="241">

    <!--xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"-->
    <!--xmlns:local="clr-namespace:WpfControls.Editors;assembly=ID.Controls"
    xmlns:views="clr-namespace:Intellidesk.AcadNet.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:helpers="clr-namespace:Intellidesk.AcadNet.Helpers"-->

    <!--DataContext = "{Binding RelativeSource={RelativeSource Self}, Path=ViewModel}"-->
    <!--DataContext="{Binding RelativeSource={RelativeSource Self}}"-->

    <!--<UserControl.DataContext>
        <viewModels:SearchTextViewModel />
    </UserControl.DataContext>-->

    <UserControl.Resources>
        <ResourceDictionary>
            <!--<ResourceDictionary Source="pack://application:,,,/ID.AcadNet.Resources;component/Icons.xaml" />-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\Converters.xaml"/>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\UIRecourses.xaml"/>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\Icons.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/ID.AcadNet.Resources;component/Icons.xaml" />-->
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\Styles.xaml"/>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\DataGridCustomizations.xaml"/>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\TextBoxAutoComplete.xaml"/>
                <ResourceDictionary Source="/ID.AcadNet;component/Assets\Fonts.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="AcadToolBarSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="1" />
                <Setter Property="Width" Value="4" />
                <Setter Property="Height" Value="1" />
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform CenterX="25" CenterY="25" Angle="90" />
                    </Setter.Value>
                </Setter>
            </Style>
            <FontFamily x:Key="FontAwesome">/fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>

            <!--<CollectionViewSource x:Key="Src" Source="{Binding lsds:ProjectExplorerViewModel.Layouts}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="RoundName"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>-->
            <!--<ObjectDataProvider ObjectType="lsds:ProjectExplorerViewModel" x:Key="Data"/>-->
            <!--<lsds:CommandReference x:Key="ExitCommandReference" Command="{Binding LayoutChangedCommand}" />-->
            <!--<viewModels:ProjectExplorerViewModel x:Key="Model" />-->
            <!--<lsds:IsReadImageConverter ReadImage="Read.png" UnreadImage="Unread.png" x:Key="BoolImageConverter"/>-->

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="GrdSearch" Background="#FFF0F0F0" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="100" />
            <RowDefinition Height="38" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
            <Border BorderThickness="1"
                    HorizontalAlignment="Stretch" CornerRadius="4" >
                <Grid x:Name="GrdToolbar" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="58" />
                        <ColumnDefinition Width="32" />
                    </Grid.ColumnDefinitions>

                    <Image  Source="{DynamicResource PanelIcon}" Width="16" Height="16" 
                            HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Margin="8,0,8,0" Opacity="0.5" Cursor="No"  />

                    <Separator Grid.Column="0" Style="{DynamicResource AcadToolBarSeparatorStyle}" Width="20" HorizontalAlignment="Right" />

                    <Image Source="{DynamicResource SearchViewLayers}" Grid.Column="1" Width="16" Height="16"
                           HorizontalAlignment="Left" Margin="5,0,0,0" ToolTip="Layers" />

                    <ComboBox x:Name="LayersComboBox" Grid.Column="1" 
                              ItemsSource="{Binding Layers}" 
                              SelectedValue="{Binding CurrentLayer}" Width="auto" 
                              Margin="30,4,0,4" ToolTip="Layers" Cursor="Hand"/>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="3,3,3,3">
                        <Button x:Name="RefreshButton" ToolTip="Refresh layers"
                            Command="{Binding RefreshCommand}"
                            CommandParameter="{Binding ElementName=LayersComboBox }" Content=""
                            Style="{DynamicResource AcadButtonFontStyle}" Cursor="Hand"
                            Tag="{StaticResource #fa-refresh }">
                        </Button>
                        <Button x:Name="CloseButton" Command="{Binding CloseCommand}" 
                            Style="{DynamicResource AcadButtonFontStyle}" 
                            ToolTip="Close" IsEnabled="True" Cursor="Hand" Content=""
                            Tag="{StaticResource #fa-times }">
                        </Button>
                    </StackPanel>

                    <StackPanel x:Name="ButtonsPanelRight" Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Right" >
                        <Separator Style="{DynamicResource AcadToolBarSeparatorStyle}" Width="20" />
                        <!--IsExpanded="{StaticResource PanelSizeMode}"-->
                        <Expander Grid.Column="1" ExpandDirection="Left" ToolTip="Collapse"
                                  BorderBrush="Transparent" Margin="3,3,3,0"
                                  IsExpanded="{Binding Path=SwitchSizeMode}"
                                  HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" Cursor="Hand" />
                    </StackPanel>

                    <!--<ComboBox SelectedIndex="1" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                            <ComboBoxItem Content="50%"/>
                            <ComboBoxItem Content="100%"/>x:FieldModifier="public"
                            <ComboBoxItem Content="150%"/>SelectedValue="{Binding CurrentLayout}"SelectedItem="{Binding CurrentLayout}"
                        </ComboBox>-->
                </Grid>
            </Border>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Margin="10,5,10,0" >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="33"></RowDefinition>
                    <RowDefinition Height="{Binding IsBlockAttrRowVisible, Converter={StaticResource BooleanToHeightConverter}}" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="0" Grid.Row="0" FontWeight="Bold" Height="23" Margin="0,5,5,5"
                          ItemsSource="{Binding EntityTypes}" 
                          SelectedValue="{Binding CurrentEntityType}" 
                          ToolTip="search entity type" Cursor="Hand" HorizontalContentAlignment="Stretch" />

                <TextBox x:Name="SearchText" 
                         Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Height="23" Margin="0,5,0,5" 
                         Text="{Binding Path=SelectedText, UpdateSourceTrigger=PropertyChanged}" 
                         infrahelpers:EnterKeyHelpers.EnterKeyCommand="{Binding RunCommand}"
                         infrahelpers:EnterKeyHelpers.EnterKeyCommandParam="{Binding SelectedText}" 
                         TextChanged="TextChanged" PreviewTextInput="TextPreviewTextInput" Tag="*" TextWrapping="Wrap" 
                         ToolTip="Name pattern (* - any, ^ - start with, $ - end with)" />

                <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,5,0,5" >
                    <TextBlock Margin="0,0,5,0" FontSize="11" TextAlignment="Left" FontWeight="Bold">Block attributes:</TextBlock>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="33" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Grid.Row="0" TextWrapping="Wrap" Margin="0,3,0,5" 
                                 Text="{Binding Path=SelectedAttrName, UpdateSourceTrigger=PropertyChanged}" Height="23"
                                 TextChanged="TextChanged" PreviewTextInput="TextPreviewTextInput"
                                 Tag="*" ToolTip="tag name pattern (* - any, ^ - start with, $ - end with)" />

                        <ComboBox Grid.Column="0" Grid.Row="0" Margin="0,3,1,5"
                                  ItemsSource="{Binding BlockAttrNames}" Height="23" Width="15" 
                                  SelectedValue="{Binding SelectedAttrName}" HorizontalAlignment="Right"
                                  Cursor="Hand" />

                        <TextBox TextWrapping="Wrap" Margin="10,3,0,5" Grid.Column="1" Grid.Row="0" 
                                 Text="{Binding Path=SelectedAttrValue, UpdateSourceTrigger=PropertyChanged}" Height="23"
                                 TextChanged="TextChanged" PreviewTextInput="TextPreviewTextInput" 
                                 Tag="*" ToolTip="tag value pattern (* - any, ^ - start with, $ - end with)" />
                    </Grid>
                </StackPanel>
            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" Margin="10,5,10,0" VerticalAlignment="Top">
            <!--<ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>-->
            <!--</ComboBox>-->
            <!--<ComboBox x:Name="LayersComboBox" Margin="10,0,10,0"
                ItemsSource="{Binding Layers}"
                SelectedValue="0" 
                DisplayMemberPath="Name"
                SelectedValuePath="Name"/>-->

            <!--<ComboBox x:Name="LayersComboBox" Margin="10,0,10,0" 
                      ItemsSource="{Binding Layers}"
                      SelectedValuePath ="{Binding CurrentLayer}"/>                  SelectedValue="{Binding CurrentLayer}"
                  SelectedItem="{Binding CurrentLayer}"-->
            <!--<ComboBox x:Name="LayersComboBox" Margin="10,0,10,0" ItemsSource="{Binding Layers}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>-->
            <!--<TextBlock  TextWrapping="Wrap" FontWeight="Bold" Height="16">Text:
                <TextBlock.Effect>
                    <DropShadowEffect ShadowDepth="2" Color="White" RenderingBias="Quality" BlurRadius="1"/>
                </TextBlock.Effect>
            </TextBlock>-->

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,5">
                <Button x:Name="BtnStop" Command="{Binding StopCommand}" CommandParameter="" 
                        Margin="0,0,10,0" Width="80" HorizontalAlignment="Right"
                        Style="{DynamicResource AcadButtonFontStyle}"
                        BorderBrush="#FFABADB3" Background="LightGray"
                        Tag="{StaticResource #fa-stop}" Content="Stop"  
                        IsEnabled="{Binding StopButtonEnabled }" />
                <Button x:Name="BtnSearch" Command="{Binding RunCommand}" CommandParameter="{Binding SelectedText}" 
                        Style="{DynamicResource AcadButtonFontStyle}" Width="80"
                        BorderBrush="#FFABADB3" Background="LightGray" 
                        HorizontalAlignment="Right" IsEnabled="{Binding ElementName=SearchText, Path=Text.Length, Mode=OneWay}"
                        Tag="{StaticResource #fa-search}" Content="{Binding RunContentText}">
                </Button>
            </StackPanel>

            <Grid Height="36">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" VerticalAlignment="Center">
                    <CheckBox x:Name="CanPopulatedCheckBox" Margin="0,2,4,0"
                              VerticalAlignment="Top"
                              IsChecked="{Binding CanPopulated, Mode=TwoWay}">

                        <StackPanel>
                            <TextBlock TextWrapping="Wrap" FontSize="10"
                                       Text="Multiple results" ToolTip="all | first only"/>
                        </StackPanel>
                    </CheckBox>
                </StackPanel>

                <Separator Grid.Column="0" Style="{DynamicResource AcadToolBarSeparatorStyle}" Width="Auto" HorizontalAlignment="Right" />

                <StackPanel Grid.Column="1" Margin="5,0,0,0">
                    <TextBlock TextWrapping="Wrap" FontSize="10" 
                               Text="Zoom:"/>
                    <Slider Minimum="1" Maximum="7" TickFrequency="1" IsMoveToPointEnabled="True"
                            Value="{Binding CurrentZoomDisplayFactor, Mode=TwoWay}"    
                            TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight">
                        <Slider.ToolTip>
                            <ToolTip Content="{Binding RelativeSource={RelativeSource Self},
                               Path=PlacementTarget.Value}" ContentStringFormat="Zoom: {0:0}" />
                        </Slider.ToolTip>
                    </Slider>
                    <!--ItemsSource="{Binding Layers}"-->
                </StackPanel>
            </Grid>

            <!--<TextBlock x:Name="ProgressBarStateText" Margin="10,-16,10,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                       Text="{Binding ProgressStateValue, StringFormat='{}{0} items'}">
            </TextBlock> -->

            <!--<TextBlock Text="{Binding ElementName=ProgressBar, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,-16,10,10" />-->
            <DockPanel Margin="0,2,0,0">
                <TextBlock  Margin="0,3" FontWeight="Bold">Clickable results:
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="2" Color="White" RenderingBias="Quality" BlurRadius="1"/>
                    </TextBlock.Effect>
                </TextBlock>

                <TextBlock Margin="5,3" Text="{Binding FromCount, StringFormat='{}{0}'}" FontWeight="Bold"></TextBlock>
                <TextBlock Margin="3,3" Visibility="{Binding StopButtonEnabled, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" >
                    <Run Text="from " />
                    <Run Text="{Binding TotalCount, StringFormat='{}{0}'}" />
                </TextBlock>
            </DockPanel>

            <ProgressBar x:Name="ProgressBar" 
                         Value="{Binding ProgressBarValue, Mode=OneWay}"
                         Minimum="{Binding ProgressBarMinimum, Mode=OneWay}"
                         Maximum="100"
                         IsIndeterminate="False"
                         Height="5">
            </ProgressBar>
        </StackPanel>

        <ListBox x:Name="ExistTextList" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" SelectionMode="Single" 
                 Margin="10,0" Height="auto" MinHeight="100" 
                 ItemsSource="{Binding ExistListItems}" 
                 DisplayMemberPath="DisplayName" 
                 SelectedIndex="0" PreviewMouseDown="SelectedIndex_OnPreviewMouseDown"
                 SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}" Cursor="Hand">
        </ListBox>

        <StackPanel Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0" Orientation="Horizontal" Height="22"
                    Margin="10,5" HorizontalAlignment="Right">
            <Button Command="{Binding ClearCommand}" AutomationProperties.AutomationId="ClearButton"
                    Margin="0,0,10,0" Padding="15,0" HorizontalAlignment="Left" Cursor="Hand"
                    ToolTip="Clear items" >Clear
            </Button>
            <Button Command="{Binding SelectSetCommand}" 
                    AutomationProperties.AutomationId="SelectButton" 
                    Margin="0,0,10,0" Width="71" Cursor="Hand"
                    ToolTip="Select objects on drawing" >Select set</Button>
            <Button Command="{Binding ExportCommand}"
                    AutomationProperties.AutomationId="SaveAsButton"
                    Width="71" FontWeight="Bold" Cursor="Hand"
                    ToolTip="Save objects to file">Export
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
