<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:core="clr-namespace:Intellidesk.AcadNet.Core"
    xmlns:components="clr-namespace:Intellidesk.AcadNet.Components">

    <!--
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    <awe:WebSessionProvider x:Key="WebSession" DataPath=".\Cache">
        <core1:WebPreferences 
                ShrinkStandaloneImagesToFit="False"
                SmoothScrolling="True" />
    </awe:WebSessionProvider>
    <awe:UrlConverter x:Key="UrlConverter" />-->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <!--<system:String x:Key="ImgGifIndicator">pack://application:,,,/ID.AcadNet;component/Resources/loader-snake-16.gif</system:String>-->
    <SolidColorBrush x:Key="DefaultListBorder" Color="#88828790"/>
    <FontFamily x:Key="FontAwesome">pack://application:,,,/ID.AcadNet;component/Fonts/fontawesome-webfont.ttf#FontAwesome</FontFamily>

    <LinearGradientBrush x:Key="DefaultHeaderAreaBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD4D4D4" Offset="0"/>
        <GradientStop Color="#FF979797" Offset="0.9"/>
        <GradientStop Color="#FFB6B6B6" Offset="0.5"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#7DA8E7" />
    <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                     Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}" />-->

    <!-- Up arrow -->
    <DataTemplate x:Key="AscSortHeaderTemplate">
        <DockPanel  Background="Transparent">
            <TextBlock Text="{Binding}" FontSize="11" />
            <Path x:Name="arrow" StrokeThickness="1" Fill="#FF4C4A4A"  Data="M 5,10 L 15,10 L 10,5 L 5,10" />
        </DockPanel>
    </DataTemplate>

    <!-- Down arrow -->
    <DataTemplate x:Key="DescSortHeaderTemplate">
        <DockPanel Background="Transparent">
            <TextBlock Text="{Binding}" FontSize="11" />
            <Path x:Name="arrow" StrokeThickness="1" Fill="#FF4C4A4A" Data="M 5,5 L 10,10 L 15,5 L 5,5" />
        </DockPanel>
    </DataTemplate>

    <!-- Normal -->
    <DataTemplate x:Key="NormalSortHeaderTemplate">
        <DockPanel>
            <TextBlock Text="{Binding}" FontSize="11" />
        </DockPanel>
    </DataTemplate>

    <Path x:Key="IconTriangle" x:Shared="False" Stretch="Uniform" Data="M50.25,133.5 L49.75,158.25 76,147.25 z" Fill="Black" Stroke="Black"/>

    <!--<DataTemplate DataType="{x:Type lsds:MainViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="3,0">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentLayout.ChangedProperties.Count}" Value="0">
                                                    <Setter Property="Source" Value="{DynamicResource LsdsSave}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding CurrentLayout.ChangedProperties.Count}" Value="1">
                                                    <Setter Property="Source" Value="{DynamicResource LsdsSave_a}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </DataTemplate>-->

    <!--BRUSHES-->
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DodgerBlue"/>
    <SolidColorBrush x:Key="IconColor" Color="Black" />
    <SolidColorBrush x:Key="IconNormalColor" Color="#FF5B5B5B" />
    <SolidColorBrush x:Key="IconSelectedColor" Color="#FF002EFF" />

    <!-- FILL BRUSHES -->
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#F3F3F3" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FFCDCDCD" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <!-- Border Brushes -->
    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FFD1D1D1" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="LightGray" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#FFCFCFCF" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <!--STYLES-->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style for demonstrate errors into ToolTip occured in text field-->
    <Style TargetType="{x:Type xctk:WatermarkTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style for demonstrate errors into ToolTip occured in PropertyItem of Propertygrid-->
    <Style TargetType="{x:Type xctk:PropertyItem}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Validation.HasError, RelativeSource={x:Static RelativeSource.Self}}"
				Value="True">
                <Setter Property="ToolTip"
					Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--not used-->
    <Style x:Key="DataGridRow1" TargetType="{x:Type DataGridRow}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DodgerBlue" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="2" >
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="3">
                <Setter Property="Background" Value="Silver" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle 
							Margin="15,0,0,0"
							StrokeThickness="1"
							Stroke="#60000000"
							StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image x:Name="CheckBoxImg" HorizontalAlignment="Center" Height="16" Margin="0"
						Source="{DynamicResource LsdsFilter}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <microsoftWindowsThemes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IconContent">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.495"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel Orientation="{Binding (netTools:IconButton.Orientation), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                            <ContentControl 
								Content="{Binding (netTools:IconButton.Icon), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
								Width="{Binding (netTools:IconButton.IconSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
								Height="{Binding (netTools:IconButton.IconSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
								x:Name="IconContent" Margin="4" RenderTransformOrigin="0.5,0.5" IsEnabled="{Binding IsEnabled, ElementName=Chrome}">
                                <ContentControl.Effect>
                                    <DropShadowEffect Opacity="0" BlurRadius="2"/>
                                </ContentControl.Effect>
                                <ContentControl.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ContentControl.RenderTransform>
                            </ContentControl>
                            <TextBlock x:Name="textBlock" Margin="4" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        </StackPanel>
                    </microsoftWindowsThemes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="StateImageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:CustomImageButton}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" 
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="Transparent" BorderBrush="{x:Null}" Margin="2">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <WrapPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

                                        <Image x:Name="ImageActive" HorizontalAlignment="Center" Margin="2"
											Source="{TemplateBinding ActiveImage}" 
                                               Width="{Binding (core:Img.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                               Height="{Binding (core:Img.IconSize), RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Image x:Name="ImageNormal" HorizontalAlignment="Center" Margin="2"
											Source="{TemplateBinding NormalImage}" 
                                               Width="{Binding (core:Img.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                               Height="{Binding (core:Img.IconSize), RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <TextBlock FontWeight="{TemplateBinding FontWeight}" Margin="1,0,0,1" 
											Foreground="{TemplateBinding Foreground}"
											FontSize="{TemplateBinding FontSize}"
											Text="{TemplateBinding Content}" 
											Background="Transparent"/>
                                    </StackPanel>
                                </WrapPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<ColorAnimation Storyboard.TargetName="AcadButtonBorder"
                                                            Storyboard.TargetProperty="Background.Color" BeginTime="0:0:0"
                                                            Duration="0:0:5" AutoReverse="True" From="Transparent" To="#261D7A"/>-->
                                        <!--<ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Background.Color"
                                            Storyboard.TargetName="AcadButtonBorder" BeginTime="0:0:0"
                                            Duration="0:0:6" FillBehavior="HoldEnd">
                                                <ColorAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearColorKeyFrame Value="OrangeRed" KeyTime="0:0:2" />
                                                    <DiscreteColorKeyFrame Value="Transparent" KeyTime="0:0:2.5" />
                                                    <LinearColorKeyFrame Value="OrangeRed" KeyTime="0:0:4" />
                                                    <SplineColorKeyFrame Value="Transparent" KeyTime="0:0:4.5" KeySpline="0.6,0.0 0.9,0.00" />
                                                </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ImageNormalDataTemplate">
        <Image Stretch="None" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.NormalImage)}"
               HorizontalAlignment="Center" Height="16" Margin="2" />
    </DataTemplate>
    <DataTemplate x:Key="ImageDisableDataTemplate">
        <Image Stretch="None" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.DisabledImage)}"
               HorizontalAlignment="Center" Height="16" Margin="2" />
    </DataTemplate>
    <DataTemplate x:Key="ImageFocusedlDataTemplate">
        <Image Stretch="None" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.FocusedImage)}"
               HorizontalAlignment="Center" Height="16" Margin="2" />
    </DataTemplate>
    <DataTemplate x:Key="ImageDataTemplate">
        <WrapPanel Orientation="Vertical" VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image x:Name="TheImage" Stretch="None" HorizontalAlignment="Center" Height="16" Margin="2" />
                <TextBlock Margin="1,0,0,1" Text="{TemplateBinding Content}" Background="Transparent"/>
            </StackPanel>
        </WrapPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=ButtonContentPresenter, Path=IsEnabled}" Value="true">
                <Setter TargetName="TheImage" Property="Source" 
                    Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.FocusedImage)}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="AcadToolBarSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="Width" Value="4" />
        <Setter Property="Height" Value="1" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <RotateTransform CenterX="25" CenterY="25" Angle="90" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownButtonStyleCustom" TargetType="{x:Type xctk:DropDownButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalBackgroundKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalOuterBorderKey, TypeInTargetAssembly={x:Type themes:ResourceKeys}}}"/>-->
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" BorderBrush="{x:Null}">
                            <ToggleButton.IsHitTestVisible>
                                <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <xctk:InverseBoolConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ToggleButton.IsHitTestVisible>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Grid>
                                <xctk:ButtonChrome x:Name="ToggleButtonChrome" BorderBrush="{x:Null}" 
                                                   Background="{x:Null}"
                                                   BorderThickness="{TemplateBinding BorderThickness}" 
                                                   CornerRadius="0" Foreground="{TemplateBinding Foreground}" 
                                                   InnerCornerRadius="0" 
                                                   RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}" 
                                                   RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}"
                                                   RenderChecked="{TemplateBinding IsOpen}" 
                                                   RenderEnabled="{TemplateBinding IsEnabled}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="4,3">
                                            <Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="Black" Height="4" Width="7"/>
                                        </Grid>
                                    </Grid>
                                </xctk:ButtonChrome>
                            </Grid>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" Placement="Bottom" StaysOpen="False" VerticalOffset="1">
                            <Border BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                        <GradientStop Color="#FF718597" Offset="0.375"/>
                                        <GradientStop Color="#FF617584" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FFE8EBED" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--============================= Buttons =============================-->

    <Style x:Key="StateButtonStyle" TargetType="{x:Type components:CustomImageButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:CustomImageButton}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" 
                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                            Background="Transparent" BorderBrush="{x:Null}" Margin="0,2,0,2">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
                                          Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
                                          VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <WrapPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image x:Name="ImageActive" HorizontalAlignment="Center" Height="16" Margin="2"
                                               Source="{TemplateBinding ActiveImage}" />
                                        <Image x:Name="ImageNormal" HorizontalAlignment="Center" Height="16" Margin="2"
                                               Source="{TemplateBinding NormalImage}" />
                                        <TextBlock FontWeight="{TemplateBinding FontWeight}" Margin="1,0,0,1" 
                                                   Foreground="{TemplateBinding Foreground}"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Text="{TemplateBinding Content}" 
                                                   Background="Transparent"/>
                                    </StackPanel>
                                </WrapPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<ColorAnimation Storyboard.TargetName="AcadButtonBorder"
                                                            Storyboard.TargetProperty="Background.Color" BeginTime="0:0:0"
                                                            Duration="0:0:5" AutoReverse="True" From="Transparent" To="#261D7A"/>-->
                                        <!--<ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Background.Color"
                                            Storyboard.TargetName="AcadButtonBorder" BeginTime="0:0:0"
                                            Duration="0:0:6" FillBehavior="HoldEnd">
                                                <ColorAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearColorKeyFrame Value="OrangeRed" KeyTime="0:0:2" />
                                                    <DiscreteColorKeyFrame Value="Transparent" KeyTime="0:0:2.5" />
                                                    <LinearColorKeyFrame Value="OrangeRed" KeyTime="0:0:4" />
                                                    <SplineColorKeyFrame Value="Transparent" KeyTime="0:0:4.5" KeySpline="0.6,0.0 0.9,0.00" />
                                                </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter" Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcadButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" Margin="0,2,0,2" Padding="0"
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="{x:Null}" BorderBrush="{x:Null}">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <WrapPanel Orientation="Vertical" VerticalAlignment="Center" Height="16">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="AcadButtonImage" HorizontalAlignment="Center" 
                                               Height="16" Source="{TemplateBinding Tag}" />
                                        <TextBlock FontWeight="{TemplateBinding FontWeight}" Margin="1,0,0,1" 
											Foreground="{TemplateBinding Foreground}"
											FontSize="{TemplateBinding FontSize}"
											Text="{TemplateBinding Content}" 
											Background="Transparent"/>
                                    </StackPanel>
                                </WrapPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AnimationImage" TargetType="{x:Type Image}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="0" CenterX="20" CenterY="20" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" 
                               From="0" To="360" Duration="0:0:1.5" RepeatBehavior="Forever" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AcadButtonFontStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" Height="22"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="ButtonContentPresenter">
                            <ContentPresenter.Content>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock x:Name="ButtonContent" Margin="4,1,6,0" FontWeight="Bold" 
                                                Text="{TemplateBinding Content}">
                                    </TextBlock>
                                    <TextBlock
                                        Text="{TemplateBinding Tag}"
                                        FontFamily="{StaticResource FontAwesome}" 
                                        FontSize="14" Width="14" Foreground="{TemplateBinding Foreground}"
                                        VerticalAlignment="Center">
                                        <TextBlock.Effect>
                                            <DropShadowEffect ShadowDepth="1" Color="White" RenderingBias="Quality" BlurRadius="1"/>
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </StackPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ButtonContent" Property="Margin" Value="1,1" />
                            <Setter Property="Width" Value="26" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcadActionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" Margin="4"
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="{x:Null}" BorderBrush="{x:Null}">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <WrapPanel Orientation="Vertical" VerticalAlignment="Center" Height="22">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="AcadButtonImage" Style="{Binding ElementName=AnimationImage}" HorizontalAlignment="Center" Height="22"
											Source="{TemplateBinding Tag}" />
                                        <TextBlock FontWeight="{TemplateBinding FontWeight}" Margin="1,0,0,1" 
											Foreground="{TemplateBinding Foreground}"
											FontSize="{TemplateBinding FontSize}"
											Text="{TemplateBinding Content}" 
											Background="Transparent"/>
                                    </StackPanel>
                                </WrapPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcadButtonStateStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" Margin="4"
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="{x:Null}" BorderBrush="{x:Null}">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <Image x:Name="ImageState" Source="{DynamicResource LsdsNone}" Height="18" Width="18" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="-1">
                                            <Setter TargetName="ImageState" Property="Source" Value="{DynamicResource LsdsSave}"/>
                                            <Setter TargetName="ImageState" Property="ToolTip" Value="Layout state: Save"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Value="1">
                                            <Setter TargetName="ImageState" Property="Source" Value="{DynamicResource LsdsSave}"/>
                                            <Setter TargetName="ImageState" Property="ToolTip" Value="Layout state: Save"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                    <!--<TextBlock FontWeight="Bold" TextAlignment="Center" 
                                                   Text="{Binding LayoutState, Converter={StaticResource StateToValueConverter}}" />-->
                                    <!--<Image Name="Img" HorizontalAlignment="Center" Height="16" Width="16" MinHeight="16" MinWidth="16" 
                                              Source="{DynamicResource LsdsDelete}" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="{Binding LayoutState, Converter={StaticResource StateToImageConverter}}" />
                                            </Style>
                                        </Image.Style>  
                                    </Image>-->
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                            <Setter TargetName="AcadButtonBorder" Property="Background" Value="#FFC3E8FF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="#FF282828" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcadButtonStyleMedia" BasedOn="{StaticResource AcadButtonStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--<ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:2" From="Black" To="Red"/>-->
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <!--<Setter Property="Foreground" Value="Black" />-->
                <!--<Setter TargetName= Property="Tag" Value="{DynamicResource LsdsSave_a}" />-->
                <!--<Setter Property="BitmapEffect">
                        <Setter.Value>
                            <DropShadowBitmapEffect ShadowDepth="0" Softness="0.3" Color="Red" />
                        </Setter.Value>
                </Setter>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonImageTemplate_sample" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Stretch="None" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.NormalImage)}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Stretch="None" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.FocusedImage)}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image Stretch="None" Opacity=".5" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=(core:ImageStates.DisabledImage)}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AcadButtonNotifyStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="#FF5B5B5B" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="AcadButtonBorder" BorderThickness="1" Margin="0,2,0,2" Padding="0"
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="{x:Null}" BorderBrush="{x:Null}">
                        <!--Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"-->
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <WrapPanel Orientation="Vertical" VerticalAlignment="Center" Height="16">
                                    <StackPanel Orientation="Horizontal">
                                        <!--<Image x:Name="AcadButtonImage" HorizontalAlignment="Center" Height="16" Source="{TemplateBinding Tag}" />-->
                                        <TextBlock x:Name="tbFontAwesome" Text="{TemplateBinding Tag}" 
                                           FontFamily="{StaticResource FontAwesome}" 
                                           FontSize="16" Width="16" Foreground="{TemplateBinding Foreground}" 
                                           HorizontalAlignment="Right" VerticalAlignment="Center">
                                            <TextBlock.Effect>
                                                <DropShadowEffect ShadowDepth="1" Color="White" RenderingBias="Quality" BlurRadius="1"/>
                                            </TextBlock.Effect>
                                        </TextBlock>
                                        <TextBlock x:Name="tbFontAwesome2" Text="{TemplateBinding Content}" 
                                           FontFamily="{StaticResource FontAwesome}" 
                                           FontSize="11"  Margin="-7,-10,0,0"
                                           HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="#FF474747">
                                            <TextBlock.Effect>
                                                <DropShadowEffect BlurRadius="1" Direction="-120" ShadowDepth="1" Opacity="1" Color="White" />
                                            </TextBlock.Effect>
                                        </TextBlock>
                                    </StackPanel>
                                </WrapPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AcadButtonBorder" Property="BorderBrush" Value="MediumBlue"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="AcadButtonBorder" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=============================== CheckBoxs ===============================-->

    <Style x:Key="AcadCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="CheckBoxBorder" BorderThickness="1" Margin="0,2,0,2"
						Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
						Background="{x:Null}" BorderBrush="{x:Null}">
                        <ContentPresenter x:Name="ButtonContentPresenter" 
							Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" 
							VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ContentPresenter.Content>
                                <StackPanel x:Name="border" Background="{x:Null}" VerticalAlignment="Center">
                                    <Image x:Name="ImageNormal" Source="{DynamicResource ShowMarkers}" Height="16" ToolTip="Show only base folder (base folder and checked subfolders)" />
                                    <Image x:Name="ImageActive" Source="{DynamicResource ShowAll}" Height="16" ToolTip="Show All (drives and folders)"/>
                                </StackPanel>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ImageActive" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ImageNormal" Property="Visibility" Value="Collapsed" />
                            <!--<Setter TargetName="CheckBoxBorder" Property="Background" Value="#C3DFFF" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#FF7C7C7C" />-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="#C3DFFF" />
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#FF4D4D4D" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="DarkRed" />
                            <Setter TargetName="ButtonContentPresenter"  Property="RenderTransform" >
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcadCheckBoxStyleWithData" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
								Width="13" 
								Height="13" 
								CornerRadius="0" 
								Background="{StaticResource NormalBrush}"
								BorderThickness="1"
								BorderBrush="{StaticResource NormalBorderBrush}">
                                <Path 
									Width="7" Height="7" 
									x:Name="CheckMark"
									SnapsToDevicePixels="False" 
									Stroke="{StaticResource GlyphBrush}"
									StrokeThickness="2"
									Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--http://stackoverflow.com/questions/18537033/change-images-on-custom-checkbox-in-wpf-->
    <Style x:Key="CheckBoxStyleCustom" TargetType="{x:Type CheckBox}">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="14" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Path x:Name="MyPin" Width="18" Height="18" Stretch="Fill" Fill="#FF000000"
                              Data="F1 M 56.1355,32.5475L 43.4466,19.8526C 42.7886,20.4988 42.298,21.2123 41.9749,21.9932C 41.6519,22.7741 41.4903,23.5729 41.4903,24.3895C 41.4903,25.1942 41.6529,25.987 41.9779,26.7679L 34.0577,34.6821C 33.3918,34.3372 32.6991,34.0776 31.9796,33.9032C 31.2601,33.7288 30.5298,33.6415 29.7885,33.6415C 28.623,33.6415 27.4953,33.8526 26.4052,34.2748C 25.315,34.697 24.3419,35.3342 23.4856,36.1865L 30.2344,42.9174L 25.9027,47.9032L 22.6532,51.8425L 20.5988,54.5836C 20.1212,55.2892 19.8823,55.753 19.8823,55.975L 19.8645,56.0701L 19.9002,56.088L 19.9002,56.1474L 19.9358,56.1058L 20.0131,56.1236C 20.2351,56.1236 20.6989,55.8888 21.4045,55.419L 24.1457,53.3765L 28.0849,50.1151L 33.0945,45.7775L 39.8016,52.5025C 40.6579,51.6462 41.2961,50.6731 41.7163,49.5829C 42.1365,48.4928 42.3466,47.367 42.3466,46.2056C 42.3466,45.4603 42.2603,44.729 42.0879,44.0115C 41.9155,43.294 41.6548,42.6003 41.3069,41.9304L 49.2202,34.0161C 50.0011,34.3372 50.7939,34.4978 51.5986,34.4978C 52.4192,34.4978 53.2189,34.3362 53.9979,34.0132C 54.7768,33.6901 55.4894,33.2015 56.1355,32.5475 Z "/>

                        <ContentPresenter VerticalAlignment="Center" Margin="10,0,0,0" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="MyPin" Property="Data" Value="F1 M 32.3691,30.2225L 33.2253,29.3901L 15.361,11.5258C 13.9814,12.7067 12.6951,13.9936 11.5148,15.3738L 26.6252,30.4842C 27.743,30.1631 28.8767,30.0025 30.0263,30.0025C 30.8191,30.0025 31.6,30.0759 32.3691,30.2225 Z M 45.5039,49.3629L 60.6292,64.4826C 62.0123,63.2996 63.3017,62.0101 64.4846,60.6268L 46.6218,42.7866L 45.7834,43.619L 45.9439,44.7726L 45.9915,45.9261L 45.8785,47.6713L 45.5039,49.3629 Z M 56.1355,32.5475L 43.4466,19.8526C 42.7886,20.4987 42.298,21.2123 41.9749,21.9932C 41.6519,22.7741 41.4903,23.5729 41.4903,24.3895C 41.4903,25.1942 41.6529,25.987 41.9779,26.7679L 34.0577,34.6821C 33.3918,34.3372 32.6991,34.0776 31.9796,33.9032C 31.2601,33.7288 30.5298,33.6415 29.7885,33.6415C 28.623,33.6415 27.4953,33.8526 26.4052,34.2748C 25.315,34.697 24.3419,35.3342 23.4856,36.1865L 30.2344,42.9174L 25.9027,47.9032L 22.6532,51.8425L 20.5988,54.5836C 20.1212,55.2892 19.8823,55.753 19.8823,55.975L 19.8645,56.0701L 19.9002,56.0879L 19.9002,56.1474L 19.9358,56.1058L 20.0131,56.1236C 20.2351,56.1236 20.6989,55.8888 21.4045,55.419L 24.1457,53.3765L 28.0849,50.1151L 33.0945,45.7775L 39.8016,52.5025C 40.6579,51.6462 41.2961,50.6731 41.7163,49.5829C 42.1365,48.4928 42.3466,47.367 42.3466,46.2056C 42.3466,45.4603 42.2603,44.729 42.0879,44.0115C 41.9155,43.294 41.6548,42.6003 41.306,41.9304L 49.2202,34.0161C 50.0011,34.3372 50.7939,34.4978 51.5986,34.4978C 52.4192,34.4978 53.219,34.3362 53.9979,34.0132C 54.7768,33.6901 55.4894,33.2015 56.1355,32.5475 Z " />
                            <Setter TargetName="MyPin" Property="Fill" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStyleCustom1" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="imageCheckBox" 
                               Source="pack://application:,,,/ID.AcadNet;component/Resources/filter.png" 
                               Width="15" Height="15" Margin="5" />
                        <ContentPresenter VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="imageCheckBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFontStyle" TargetType="{x:Type components:CustomFontIconCheckBox}">
        <Setter Property="Padding" Value="3,2,0,0" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" Direction="315" ShadowDepth="3" Opacity="0.2" Color="Black" RenderingBias="Performance" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:CustomFontIconCheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Width="{TemplateBinding Width}">
                        <Border x:Name="CheckStyleTextBlockBorder" Width="{TemplateBinding Width}"  BorderThickness="1" BorderBrush="DarkGray" RenderTransformOrigin="0.5,0.5" >
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <TextBlock x:Name="CheckStyleTextBlock" Opacity="0.5"
                                   Style="{TemplateBinding CheckIcon}" Foreground="{TemplateBinding CheckIconBrush}"
                                   FontFamily="{StaticResource FontAwesome}" FontSize="16" Width="20" Padding="{TemplateBinding Padding}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Effect="{TemplateBinding Effect}">

                            </TextBlock>
                        </Border>
                        <TextBlock x:Name="UnCheckStyleTextBlock" 
                                   Style="{TemplateBinding UnCheckIcon}" Foreground="{TemplateBinding UnCheckIconBrush}"
                                   FontFamily="{StaticResource FontAwesome}" FontSize="16" Width="20" Padding="{TemplateBinding Padding}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Effect="{TemplateBinding Effect}">
                        </TextBlock>
                        <ContentPresenter VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckStyleTextBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UnCheckStyleTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="CheckStyleTextBlockBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckStyleTextBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="UnCheckStyleTextBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckStyleTextBlockBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkStyle1" TargetType="{x:Type Run}" >
        <Style.Setters>
            <Setter Property="Foreground" Value="Blue"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>