<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!-- Resource dictionary entries should be defined here. -->
    <BooleanToVisibilityConverter x:Key="Bool2VisibilityConverter" />

    <!-- #MEDIA -->
    <Storyboard x:Key="Overlay">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="textone" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:03.0" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:03.0" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:06.0" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:06.0" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="texttwo" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:07.0" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:07.0" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:10.0" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:10.0" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- #BRUSHES -->
    <LinearGradientBrush x:Key="DataGridHeaderBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFD4D4D4" Offset="0" />
        <GradientStop Color="#FFD4D4D4" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataGridHeaderMouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E3E3E3" Offset="0" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataGridHeaderBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#CDCDCD" Offset="0" />
        <GradientStop Color="#FFC3C3C3" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#B5B5B5" Offset="0" />
        <GradientStop Color="#68534C" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataGridHeaderSortedBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FFEAE7E0" Offset="0"/>
        <GradientStop Color="#C4C4C4" Offset="0.9"/>
        <GradientStop Color="#A1A1A1" Offset="0.5"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="XxxDataGridHeaderSortedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#B5AC91" Offset="0" />
        <GradientStop Color="#685C58" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RowBackgroundSelectedBrushGradient" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#4F8CC7" Offset="0" />
        <GradientStop Color="#4175AC" Offset="0.7" />
        <GradientStop Color="#2F5C90" Offset="1" />
    </LinearGradientBrush>

    <!-- #SOLIDS -->
    <SolidColorBrush x:Key="DataGridBackgroundBrush" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="DataGridSelectedBrush" Color="#FF7B92AC" />
    <SolidColorBrush x:Key="DataGridSelectedForegroundBrush" Color="Black" />
    <SolidColorBrush x:Key="DataGridValidationForegroundBrush" Color="Red" />
    <SolidColorBrush x:Key="DataGridValidationBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="DataGridHorizontalLinesBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="DataGridVerticalLinesBrush" Color="DarkGray" />
    <!--<SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="#F4F4EE" />-->
    <SolidColorBrush x:Key="RowBackgroundBrush" Color="#FFB4B4B4"/>
    <SolidColorBrush x:Key="RowForegroundBrush" Color="LightGray" />
    <SolidColorBrush x:Key="RowBackgroundAlternateBrush" Color="#6AA2E0" />
    <SolidColorBrush x:Key="RowBackgroundAlternationIndex2Brush" Color="#44FF0000" />
    <SolidColorBrush x:Key="RowBackgroundAlternationIndex3Brush" Color="#44CCCCCC" />
    <SolidColorBrush x:Key="RowBackgroundSelectedBrush" Color="#A1A1A1" />
    <SolidColorBrush x:Key="RowBackgroundUnSelectedBrush" Color="#EEEEF1" />
    <SolidColorBrush x:Key="RowForegroundSelectedBrush" Color="#E3E3E3" />
    <SolidColorBrush x:Key="RowForegroundUnSelectedBrush" Color="#323232" />
    <SolidColorBrush x:Key="RowHeaderIsMouseOverBrush" Color="#3E4955" />
    <SolidColorBrush x:Key="RowHeaderSelectedBrush" Color="Red" />
    <SolidColorBrush x:Key="RowHeaderBackgroundBrush" Color="AliceBlue" />

    <DrawingBrush x:Key="ErrorTemplateBrush" Viewbox="0,0,19,16.234" ViewboxUnits="Absolute" Stretch="Uniform">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.ClipGeometry>
                        <RectangleGeometry Rect="0,0,19,15.013"/>
                    </DrawingGroup.ClipGeometry>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0,1.221"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFFF0000" Geometry="M1.5264391E-07,15.013 C1.5264391E-07,15.013 11.278179,-0.92248435 15.061861,0.04208698 18.845545,1.0066585 14.340995,3.5782006 14.340995,3.5782006 L0.93643624,14.266332 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,2.832,1.183"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFFF0000" Geometry="M0.021026401,0.27456573 C-0.46293162,1.5475728 7.5269286,11.804318 11.647909,14.61601 13.792494,16.079233 7.2223001,5.5069748 6.8034332,5.5069748 6.3845662,5.5069748 0.67633722,-1.4491695 0.021026401,0.27456573 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,10.032,2.432"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M5.7970878E-08,4.6522207 C5.7970878E-08,4.6522207 1.6666358,2.7735222 3.4580226,1.5508175 8.0168866,-1.5608194 6.1352206,0.97192629 6.1352206,0.97192629 L0.50724209,5.3830004 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0.287,8.6"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M1.0157332,6.2297077 C1.0157332,6.2297077 4.4261989,2.8647916 6.179524,1.3212826 9.1318492,-1.2777427 8.2156135,0.75924876 8.2156135,0.75924876 L-5.2486112E-08,7.3609995 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,2.815,1.686"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M1.2093127,3.1798115 C1.2093127,3.1798115 -0.0013252577,2.3808527 2.2497043E-06,0.019419075 0.00022756806,-0.38130763 4.3080003,5.5527674 4.3080003,5.5527674 L3.8011218,6.059 z"/>
                </DrawingGroup>
                <DrawingGroup>
                    <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,7.841,8.657"/>
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="#FFAB0404" Geometry="M0.68956735,1.51963 C0.68956735,1.51963 -0.93421078,0.24505694 0.80170192,0.0003053632 1.191087,-0.054595244 6.912,7.3039992 6.912,7.3039992 L5.2266264,5.9695358 z"/>
                </DrawingGroup>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!-- DataTemplate & ControlTemplate -->
    <ControlTemplate x:Key="ErrorTemplate2">
        <Grid  MinWidth="20" MinHeight="20" ToolTip="{Binding}">
            <Rectangle Fill="{StaticResource ErrorTemplateBrush}" >
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <!-- ROWS -->
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="HeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="Width" Value="0"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderThickness="1" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Margin="4" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>

                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.RowSpan="2"/>
                            </Grid>
                            <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="BorderBrush" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="DetailsVisibility" Value="Visible">
                <Setter Property="BorderThickness" Value="4,1,4,4"/>
                <Setter Property="BorderBrush" Value="#FF3886B9"/>
            </Trigger>
            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="Blue"/>
                            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- Have this style inherit from BasedOn="{StaticResource DataGridRowStyle}" to get some more agressive Error notification  (bright, ugly reds :) -->
    <Style x:Key="DataGridRowIndexStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <!--<Trigger Property="AlternationIndex" Value="2" >
                <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex2Brush}" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="3">
                <Setter Property="Background" Value="{StaticResource RowBackgroundAlternationIndex3Brush}" />
            </Trigger>-->
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
            </Trigger>
            <Trigger Property="IsSelected"  Value="false">
                <Setter Property="Background"  Value="{StaticResource RowBackgroundUnSelectedBrush}" />
                <Setter Property="Foreground"  Value="{StaticResource RowForegroundUnSelectedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COLUMNS -->

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}"  >
        <Setter Property="Background" Value="#88800080" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                <Setter Property="BorderBrush"  Value="Transparent" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="SortDirection" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource DataGridHeaderBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="SortDirection" Value="Ascending">
                <Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
            <Trigger Property="SortDirection" Value="Descending">
                <Setter Property="Background" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatagridColumnHeaderCustomTemplateStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                                Background="{StaticResource DataGridHeaderSortedBackgroundBrush}" 
                                BorderBrush="{StaticResource DataGridHeaderSortedBorderBrush}" 
                                Grid.ColumnSpan="2" />
                        <ContentPresenter Margin="1,1,1,1" VerticalAlignment="Center"  
                                          ContentTemplate="{DynamicResource ColumnHeaderDataTemplate}"/>
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                              Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" 
                              VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        <Rectangle Width="1" Fill="#C3C3C3" HorizontalAlignment="Right" Grid.ColumnSpan="2" />

                        <Rectangle Width="1" Margin="0,0,1,0" Fill="#425B10" 
                                   HorizontalAlignment="Right" Grid.ColumnSpan="2" />
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" 
                                    Value="{DynamicResource DataGridHeaderBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush"  
                                    Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="BackgroundBorder" 
                                    Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="BackgroundBorder" 
                                    Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" 
                                    Value="{StaticResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" 
                                    Value="{StaticResource DataGridHeaderBorderBrush}" />
                        </MultiTrigger>-->

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" 
                                    TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{StaticResource RowHeaderBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <themes:DataGridHeaderBorder IsSelected="{TemplateBinding IsRowSelected}"
                                 IsHovered ="{TemplateBinding IsMouseOver}"
                                 IsPressed="{TemplateBinding IsPressed}"
                                 BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
                                    Path=HorizontalGridLinesBrush}"
                                 Background="{TemplateBinding Background}"                                     
                                 BorderThickness="0,1,0,0"
                                 Padding ="{TemplateBinding Padding}"
                                 Orientation="Horizontal"
                                 SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                 SeparatorBrush="{TemplateBinding SeparatorBrush}" Margin="0,-1,0,0">

                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="Center"/>
                                <Control SnapsToDevicePixels="false" 
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, 
                                    Path=(Validation.HasError), Converter={StaticResource Bool2VisibilityConverter}}" 
                                    Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, 
                                    Path=ValidationErrorTemplate}" DataContext="{Binding RelativeSource={RelativeSource  AncestorType={x:Type DataGridRow}},
                                    Path=(Validation.Errors)[0].ErrorContent }">
                                </Control>
                            </StackPanel>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper"
                           VerticalAlignment="Top" Height="3"
                           Style="{StaticResource RowHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                           VerticalAlignment="Bottom" Height="3"
                           Style="{StaticResource RowHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource RowHeaderIsMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource RowBackgroundSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="Transparent" 
                          BorderBrush="{TemplateBinding BorderBrush}"  
                          BorderThickness="0" 
                          SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#CCDAFF" />
            </Trigger>
            <Trigger Property="DataGridCell.IsSelected" Value="False">
                <Setter Property="Background" Value="#7ECCDAFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridGrayRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="HeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="Width" Value="0"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <!--"{DynamicResource {x:Static SystemColors.WindowBrushKey}}"-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderThickness="1" CornerRadius="3" 
                            Background="{TemplateBinding Background}"  SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <DataGridDetailsPresenter Margin="4" Grid.Row="1" 
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                    ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, 
                                    Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                    Visibility="{TemplateBinding DetailsVisibility}"/>

                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" Grid.RowSpan="2"/>
                            </Grid>
                            <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="BorderBrush" Value="SlateGray"/>
                            <Setter TargetName="DGR_Border" Property="Background"  Value="DodgerBlue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="DetailsVisibility" Value="Visible">
                <Setter Property="BorderThickness" Value="4,1,4,4"/>
                <Setter Property="BorderBrush" Value="#FF3886B9"/>
            </Trigger>
            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="Blue"/>
                            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- DataGrid -->

    <Style x:Key="DataGridGrayStyle"  TargetType="{x:Type DataGrid}">
        <!--<Setter Property="Background" Value="{DynamicResource bearBrush}" />-->
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="HeadersVisibility" Value="All" />
        <Setter Property="AlternationCount" Value="4" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridVerticalLinesBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridHorizontalLinesBrush}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DatagridColumnHeaderCustomTemplateStyle}" />
        <Setter Property="ColumnHeaderHeight" Value="35" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="RowHeight" Value="22" />

        <!--<Setter Property="RowBackground" Value="{StaticResource RowBackgroundBrush}" />-->
        <!--<Setter Property="RowBackground" Value="{StaticResource DataGridHeaderSortedBackgroundBrush}" />-->
        <!--<Setter Property="Foreground"  Value="{StaticResource RowForegroundBrush}" />-->
        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowIndexStyle}" />
        <!--<Setter Property="AlternatingRowBackground" Value="{StaticResource RowBackgroundAlternateBrush}" />-->
        <Setter Property="RowValidationErrorTemplate" Value="{StaticResource ErrorTemplate2}" />
        <!-- <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderWMaxHeightStyle}" /> -->
        <!--<Setter Property="RowDetailsTemplate" Value="{StaticResource RowDetailsTemplate}" />-->

        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <!-- The below line did not work.. I ended up needing an Implicit Style -->
    </Style>

    <DataTemplate x:Key="RowDetailsTemplate">
        <Grid TextBlock.Foreground="White" Width="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border Grid.Column="0" BorderThickness="1" BorderBrush="White" Margin="10" Width="{Binding}">
                <Border BorderThickness="1" BorderBrush="DarkGray">
                    <WrapPanel Margin="10">
                        <TextBlock Text="Field1" Grid.Row="0" Background="WhiteSmoke" Foreground="Black" />
                        <TextBlock Text="Field2" Grid.Row="0" Background="WhiteSmoke" Foreground="Black"/>
                        <TextBlock Text="Field3" Grid.Row="0" Background="WhiteSmoke" Foreground="Black"/>
                        <TextBlock Text="Field4" Grid.Row="0" Background="WhiteSmoke" Foreground="Black"/>

                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                    </WrapPanel>
                </Border>
            </Border>

            <Border Grid.Column="1" BorderThickness="1" BorderBrush="White" Margin="10">
                <Border BorderThickness="1" BorderBrush="DarkGray">
                    <WrapPanel Margin="10">
                        <TextBlock Text="Field1" Grid.Row="0"/>
                        <TextBlock Text="Field2" Grid.Row="0"/>
                        <TextBlock Text="Field3" Grid.Row="0"/>
                        <TextBlock Text="Field4" Grid.Row="0"/>

                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                        <TextBlock Text="{Binding }" Grid.Row="1" />
                    </WrapPanel>
                </Border>
            </Border>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="ColumnHeaderDataTemplate">
        <StackPanel HorizontalAlignment="Center">
            <TextBlock Text="{Binding}" FontSize="11" FontWeight="Bold" Foreground="Black" TextAlignment="Center" TextWrapping="WrapWithOverflow" VerticalAlignment="Center" />
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>