//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Core.Objects;

namespace Intellidesk.AcadNet.Data.Models.Intel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class Lsds2Context : DbContext
    {
        public Lsds2Context()
            : base("name=Lsds2Context")
        {
        }
    
        //protected override void OnModelCreating(DbModelBuilder modelBuilder)
        //{
        //    throw new UnintentionalCodeFirstException();
        //}
    
        public DbSet<LO_Bay> LO_Bays { get; set; }
        public DbSet<LO_BlockAttribute> LO_BlockAttributes { get; set; }
        public DbSet<LO_Block> LO_Blocks { get; set; }
        public DbSet<LO_Frame> LO_Frames { get; set; }
        public DbSet<LO_ItemAttribute> LO_ItemAttributes { get; set; }
        public DbSet<LO_Item> LO_Items { get; set; }
        public DbSet<LO_Layout> LO_Layouts { get; set; }
        public DbSet<LSDS_Config> LSDS_Config { get; set; }
    
        public virtual ObjectResult<GetCadUIConfig_Result> GetCadUIConfig(string configSetName)
        {
            var configSetNameParameter = configSetName != null ?
                new ObjectParameter("ConfigSetName", configSetName) :
                new ObjectParameter("ConfigSetName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCadUIConfig_Result>("GetCadUIConfig", configSetNameParameter);
        }
    
        public virtual ObjectResult<GetConfig_Result> GetConfig(string configSetName, string parameterName)
        {
            var configSetNameParameter = configSetName != null ?
                new ObjectParameter("ConfigSetName", configSetName) :
                new ObjectParameter("ConfigSetName", typeof(string));
    
            var parameterNameParameter = parameterName != null ?
                new ObjectParameter("ParameterName", parameterName) :
                new ObjectParameter("ParameterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConfig_Result>("GetConfig", configSetNameParameter, parameterNameParameter);
        }
    
        public virtual ObjectResult<LayoutManager_Result> LayoutManager(string command, Nullable<int> layoutID, string username, Nullable<System.DateTime> effectiveDate)
        {
            var commandParameter = command != null ?
                new ObjectParameter("Command", command) :
                new ObjectParameter("Command", typeof(string));
    
            var layoutIDParameter = layoutID.HasValue ?
                new ObjectParameter("LayoutID", layoutID) :
                new ObjectParameter("LayoutID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LayoutManager_Result>("LayoutManager", commandParameter, layoutIDParameter, usernameParameter, effectiveDateParameter);
        }
    }
}
